select * from projects;
select * from D_POSTS;



CREATE SEQUENCE SEQ_MB
START WITH 1 INCREMENT BY 1;
--시퀀스삭제
DROP SEQUENCE SEQ_MB;


----------멤버

DROP TABLE MEMBERS
CASCADE CONSTRAINTS;

--회원테이블  생성
CREATE TABLE MEMBERS(
	ID VARCHAR2(50),
	EMAIL VARCHAR2(50) UNIQUE,
	PWD VARCHAR2(50) NOT NULL,
	SEX VARCHAR2(2) NOT NULL,
	AGE DATE NOT NULL,
	AUTH NUMBER(1) NOT NULL,
	PROFILE_IMG VARCHAR2(500) NOT NULL,
	CONSTRAINT PK_MB PRIMARY KEY(ID)
);

INSERT INTO MEMBERS(ID, EMAIL, PWD, SEX, AGE, AUTH, PROFILE_IMG)
VALUES('admin', 'admin@admin.com', '1234', '0',TO_DATE('1992/02/08', 'YYYY/MM/DD'), 0, 'Source/admin.jpg');

INSERT INTO MEMBERS(ID, EMAIL, PWD, SEX, AGE, AUTH, PROFILE_IMG)
VALUES('test', 'test@admin.com', '1234', '0',TO_DATE('1985/09/20', 'YYYY/MM/DD'), 0, 'Source/test.jpg');

INSERT INTO MEMBERS(ID, EMAIL, PWD, SEX, AGE, AUTH, PROFILE_IMG)
VALUES('id', 'id@admin.com', '1234', '0',TO_DATE('1977/01/20', 'YYYY/MM/DD'), 0, 'Source/test.jpg');


SELECT *
FROM MEMBERS;

---회원테이블에서 사용할 시퀀스 
CREATE SEQUENCE SEQ_MB
START WITH 1 INCREMENT BY 1;
--시퀀스삭제
DROP SEQUENCE SEQ_MB;







DROP TABLE DDAY
CASCADE CONSTRAINTS;

---디데이테이블 생성 
CREATE TABLE DDAY(
	SEQ NUMBER(20),
	ID VARCHAR2(50),
	STARTDAY DATE,
	LASTDAY DATE,
	CONTENTS VARCHAR2(50),
	CONSTRAINT PK_DDAY PRIMARY KEY(SEQ)
);


INSERT INTO DDAY(SEQ, ID, STARTDAY, LASTDAY, CONTENTS)
VALUES(SEQ_DDAY.NEXTVAL, 'admin', TO_DATE('2018/01/10', 'YYYY/MM/DD'), TO_DATE('2018/02/10', 'YYYY/MM/DD'), '유럽여행');

INSERT INTO DDAY(SEQ, ID, STARTDAY, LASTDAY, CONTENTS)  
VALUES(SEQ_DDAY.NEXTVAL,'id', TO_DATE('2018/5/4', 'YYYY/MM/DD'), TO_DATE('2019/8/6', 'YYYY/MM/DD'), '칠레');

SELECT * FROM DDAY

SELECT TRUNC((STARTDAY-SYSDATE)+1) AS D_DAY , CONTENTS "
FROM DDAY
WHERE ID= mlmlml
ORDER BY SEQ DESC 

SELECT TRUNC((STARTDAY-SYSDATE)+1) AS D_DAY , CONTENTS
FROM DDAY
WHERE ID='mlmlml'
ORDER BY SEQ DESC;





--디데이테이블에서 생성할 시퀀스 
CREATE SEQUENCE SEQ_DDAY
START WITH 1 INCREMENT BY 1;

DROP SEQUENCE SEQ_DDAY;



DROP TABLE MESSAGE
CASCADE CONSTRAINTS;

--메시지 테이블 
CREATE TABLE MESSAGE(
	SEQ NUMBER(20),
	SENDER VARCHAR2(50),
	RECEIVER VARCHAR2(50),
	M_CONTENTS VARCHAR2(500),
	M_DATE DATE,
	M_DELETE NUMBER(1),
	M_RECEIVE NUMBER(1),
	CONSTRAINT PK_MSG PRIMARY KEY(SEQ)
);

--메시지 테이블에서 사용할 시퀀스
CREATE SEQUENCE SEQ_MSG
START WITH 1 INCREMENT BY 1;

DROP SEQUENCE SEQ_MSG;


--보낸 사람이 나 일 때
SELECT DISTINCT SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE
FROM MESSAGE
WHERE SENDER='admin'
ORDER BY M_DATE ASC;

--받는 사람이 나 일 때
SELECT DISTINCT SENDER, RECEIVER AS ID
FROM MESSAGE
WHERE (RECEIVER='admin' OR SENDER='admin');


SELECT DISTINCT RECEIVER 
FROM MESSAGE
WHERE SENDER='admin'
UNION

SELECT DISTINCT SENDER 
FROM MESSAGE
WHERE RECEIVER='admin'

--admin이 test에게 메세지 보내기
--그 전에 리스트를 가져와야함
SELECT SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE
FROM MESSAGE
WHERE RECEIVER='admin' AND SENDER='test';

UNION

----- 메세지 가져오는 SQL
SELECT SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE
FROM MESSAGE
WHERE (RECEIVER='test' AND SENDER='admin') OR (RECEIVER='admin' AND SENDER='test')
ORDER BY SEQ ASC;



SELECT DISTINCT SENDER, RECEIVER
FROM MESSAGE
WHERE RECEIVER='admin' OR SENDER='admin'



SELECT DISTINCT SENDER
FROM MESSAGE
WHERE SENDER IN(SELECT SENDER FROM MESSAGE WHERE RECEIVER='admin');


SELECT *
FROM MESSAGE;

INSERT INTO MESSAGE (SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE)
VALUES (SEQ_MSG.NEXTVAL, 'test', 'admin', '안녕하세요. admin', SYSDATE, 0);

INSERT INTO MESSAGE (SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE)
VALUES (SEQ_MSG.NEXTVAL, 'admin', 'test', '안녕하세요. test', SYSDATE, 0);

INSERT INTO MESSAGE (SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE)
VALUES (SEQ_MSG.NEXTVAL, 'test', 'admin', '몇시인가요? ', SYSDATE, 0);


INSERT INTO MESSAGE (SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE)
VALUES (SEQ_MSG.NEXTVAL, 'id', 'admin', '안녕하세요. test 중 입니다', SYSDATE, 0);

DELETE
FROM MESSAGE
WHERE (SENDER='다른사람' AND RECEIVER='나')
OR (SENDER='나' AND RECEIVER='다른사람');

UPDATE MESSAGE
SET M_DELETE=1
WHERE (SENDER='다른사람' AND RECEIVER='나')
OR (SENDER='나' AND RECEIVER='다른사람');


SELECT DISTINCT RECEIVER 
FROM MESSAGE
WHERE SENDER='admin' AND M_DELETE=0
UNION
SELECT DISTINCT SENDER 
FROM MESSAGE
WHERE RECEIVER='admin' AND M_DELETE=0;


UPDATE MESSAGE  
SET M_DELETE=1  
WHERE (SENDER='mlmlml' AND RECEIVER='admin')
OR (SENDER='admin' AND RECEIVER='mlmlml');

SELECT SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE
FROM MESSAGE
WHERE M_DELETE=1
ORDER BY SEQ ASC;

SELECT SEQ, SENDER, RECEIVER, M_CONTENTS, M_DATE, M_DELETE
FROM MESSAGE
WHERE ((RECEIVER='test' AND SENDER='admin')
OR (RECEIVER='admin' AND SENDER='test')) AND M_DELETE=1
ORDER BY SEQ ASC;



DROP TABLE COMMENTS
CASCADE CONSTRAINTS;

--코멘트 테이블 
CREATE TABLE COMMENTS(
	SEQ NUMBER(20),
	P_NUM NUMBER,
	ID VARCHAR2(50), --남긴 사람
	C_CONTENTS VARCHAR2(300),
	DEL NUMBER(1),	
	C_DATE DATE,
	C_GROUP NUMBER(10),
	C_DEPT NUMBER(10),
	C_STEP NUMBER(10),
	CONSTRAINT PK_CMT PRIMARY KEY(SEQ)
);

--코멘트테이블에서 사용할 시퀀스 
CREATE SEQUENCE SEQ_COMMENTS
START WITH 1 INCREMENT BY 1;

DROP SEQUENCE SEQ_COMMENTS;


SELECT * FROM MEMBERSS;


--외래키(PROJECT-SEQ > COMMENTS -P_NUM)
ALTER TABLE COMMENTS
ADD CONSTRAINT FK_COMMENTS_PNUM FOREIGN KEY(P_NUM)
REFERENCES PROJECTS(SEQ);


--MEMBERS-ID > DDAY - ID
ALTER TABLE DDAY
ADD CONSTRAINT FK_DDAY_ID FOREIGN KEY(ID)
REFERENCES MEMBERS(ID);


--MEMBERS-ID > MESSAGE-SENDER
ALTER TABLE MESSAGE
ADD CONSTRAINT FK_MESSAGES_SENID FOREIGN KEY(SENDER)
REFERENCES MEMBERS(ID);

--MEMBERS-ID > MESSAGE-RECEIVER
ALTER TABLE MESSAGE
ADD CONSTRAINT FK_MESSAGES_REID FOREIGN KEY(RECEIVER)
REFERENCES MEMBERS(ID);


---------------------------------bbs


DROP TABLE PROJECTS
CASCADE CONSTRAINTS;
---프로젝트테이블 
CREATE TABLE PROJECTS(
	SEQ NUMBER(20),
	P_TITLE VARCHAR2(50)NOT NULL,
	LIKES NUMBER(10),
	ID VARCHAR2(50),
	COMMENTS NUMBER(10),
	DEL NUMBER(1),
	P_DATE DATE,
	TAG VARCHAR(100),
	CONSTRAINT PK_PJ PRIMARY KEY(SEQ)
);


--프로젝트테이블에서 사용할 시퀀스 
CREATE SEQUENCE SEQ_PJ
START WITH 1 INCREMENT BY 1;


DROP SEQUENCE SEQ_PJ;




DROP TABLE D_POSTS
CASCADE CONSTRAINTS;

--DPOST테이블 
CREATE TABLE D_POSTS(
	SEQ NUMBER(20),
	P_NUM NUMBER(20),
	CITY VARCHAR2(50) NOT NULL,
	CONTINENT VARCHAR2(50) NOT NULL,
	COUNTRY VARCHAR2(50) NOT NULL,
	CONTENTS VARCHAR2(500),
	GRADES VARCHAR2(8),
	CASHBOOK NUMBER(5),
	D_DATE DATE,
	MAP VARCHAR2(500),
	D_DELETE NUMBER(1),
	IMG1 VARCHAR2(500),
	IMG2 VARCHAR2(500),
	IMG3 VARCHAR2(500),
	IMG4 VARCHAR2(500),
	ID VARCHAR(50),
	CONSTRAINT PK_DP PRIMARY KEY(SEQ)
);



--DPOST에서 사용할 시퀀스 
CREATE SEQUENCE SEQ_DP
START WITH 1 INCREMENT BY 1;


DROP SEQUENCE SEQ_DP;



DROP TABLE CASHBOOK
CASCADE CONSTRAINTS;

--CASHBOOK테이블 
CREATE TABLE CASHBOOK(
	SEQ NUMBER(20),
	D_NUM NUMBER(20), 
	LIST VARCHAR2(10),
	C_MEMO VARCHAR2(100), 
	PRICE NUMBER(20),
	PAYMENT VARCHAR2(8), 
	CONSTRAINT PK_CB PRIMARY KEY(SEQ)
);

--CASHBOOK에서 사용할 시퀀스 
CREATE SEQUENCE SEQ_CB
START WITH 1 INCREMENT BY 1;

DROP SEQUENCE SEQ_CB;


DROP TABLE ADVERTISEMENT
CASCADE CONSTRAINTS;

--ADVERTISEMENT테이블 
CREATE TABLE ADVERTISEMENT(
	SEQ NUMBER(20) PRIMARY KEY,
	AD1 VARCHAR2(500)
);





INSERT INTO ADVERTISEMENT (SEQ,AD1)
VALUES (SEQ_AD.NEXTVAL, 'Source/france.jpg');

INSERT INTO ADVERTISEMENT (SEQ,AD1)
VALUES (SEQ_AD.NEXTVAL, 'C:\Users\Administrator\Desktop\travelDiary\TravelDiary_ver09\Source\france.jpg');

SELECT AD1  FROM ADVERTISEMENT WHERE SEQ=1;

SELECT SEQ, AD1 FROM ADVERTISEMENT


SELECT *
FROM ADVERTISEMENT;

DELETE ADVERTISEMENT;

SELECT SEQ, AD1  FROM ADVERTISEMENT WHERE AD1 LIKE '%france%' ;
				
SELECT AD1 FROM ADVERTISEMENT ;
--ADVERTISEMENT에서 사용할 시퀀스
CREATE SEQUENCE SEQ_AD
START WITH 1 INCREMENT BY 1;


DROP SEQUENCE SEQ_AD;








--외래키로 연결
--MEMBER(ID) > PROJECTS(ID)
ALTER TABLE PROJECTS
MODIFY(ID VARCHAR2(50))
ADD 
CONSTRAINT FK_PROJECTS_ID FOREIGN KEY(ID)
REFERENCES MEMBERS(ID);




--MEMBERS(ID) > D_POSTS(ID)
ALTER TABLE D_POSTS
ADD CONSTRAINT FK_D_POSTS_ID FOREIGN KEY(ID)
REFERENCES MEMBERS(ID);

--PROJECTS(SEQ) > D_POSTS(P_NUM)
ALTER TABLE D_POSTS
ADD CONSTRAINT FK_D_POSTS_PNUM FOREIGN KEY(P_NUM)
REFERENCES PROJECTS(SEQ);



--D_POSTS(SEQ) > CASHBOOK(D_NUM)
ALTER TABLE CASHBOOK
ADD CONSTRAINT FK_CASHBOOK_DNUM FOREIGN KEY(D_NUM)
REFERENCES D_POSTS(SEQ);


